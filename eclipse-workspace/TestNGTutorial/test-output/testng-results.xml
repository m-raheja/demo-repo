<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-07-21T15:31:57 CDT" name="Loan" finished-at="2021-07-21T15:31:57 CDT" duration-ms="151">
    <groups>
      <group name="smoke">
        <method signature="TestCase1.wemo(java.lang.String)[pri:0, instance:test.TestCase1@63a12c68]" name="wemo" class="test.TestCase1"/>
        <method signature="TestCase1.Demo()[pri:0, instance:test.TestCase1@63a12c68]" name="Demo" class="test.TestCase1"/>
        <method signature="TestCase3.Demo4(java.lang.String,java.lang.String)[pri:0, instance:test.TestCase3@e15b7e8]" name="Demo4" class="test.TestCase3"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2021-07-21T15:31:57 CDT" name="personal loan" finished-at="2021-07-21T15:31:57 CDT" duration-ms="68">
      <class name="test.TestCase1">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:test.TestCase1@63a12c68]" started-at="2021-07-21T15:31:57 CDT" name="prerequisite" finished-at="2021-07-21T15:31:57 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.TestCase1@63a12c68]" started-at="2021-07-21T15:31:57 CDT" name="beforeClass" finished-at="2021-07-21T15:31:57 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeeach()[pri:0, instance:test.TestCase1@63a12c68]" started-at="2021-07-21T15:31:57 CDT" name="beforeeach" finished-at="2021-07-21T15:31:57 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeach -->
        <test-method signature="wemo(java.lang.String)[pri:0, instance:test.TestCase1@63a12c68]" started-at="2021-07-21T15:31:57 CDT" name="wemo" finished-at="2021-07-21T15:31:57 CDT" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://rahulacademy.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wemo -->
        <test-method is-config="true" signature="Aftereach()[pri:0, instance:test.TestCase1@63a12c68]" started-at="2021-07-21T15:31:57 CDT" name="Aftereach" finished-at="2021-07-21T15:31:57 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aftereach -->
        <test-method is-config="true" signature="beforeeach()[pri:0, instance:test.TestCase1@63a12c68]" started-at="2021-07-21T15:31:57 CDT" name="beforeeach" finished-at="2021-07-21T15:31:57 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeach -->
        <test-method signature="Demo()[pri:0, instance:test.TestCase1@63a12c68]" started-at="2021-07-21T15:31:57 CDT" name="Demo" finished-at="2021-07-21T15:31:57 CDT" depends-on-methods="test.TestCase1.wemo" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.TestCase1.Demo(TestCase1.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="Aftereach()[pri:0, instance:test.TestCase1@63a12c68]" started-at="2021-07-21T15:31:57 CDT" name="Aftereach" finished-at="2021-07-21T15:31:57 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Aftereach -->
        <test-method is-config="true" signature="AfterClass()[pri:0, instance:test.TestCase1@63a12c68]" started-at="2021-07-21T15:31:57 CDT" name="AfterClass" finished-at="2021-07-21T15:31:57 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
        <test-method is-config="true" signature="executeLast()[pri:0, instance:test.TestCase1@63a12c68]" started-at="2021-07-21T15:31:57 CDT" name="executeLast" finished-at="2021-07-21T15:31:57 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeLast -->
      </class> <!-- test.TestCase1 -->
      <class name="test.TestCase2">
        <test-method signature="Demo3(java.lang.String,java.lang.String)[pri:0, instance:test.TestCase2@67c33749]" started-at="2021-07-21T15:31:57 CDT" name="Demo3" data-provider="getData" finished-at="2021-07-21T15:31:57 CDT" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo3 -->
        <test-method signature="Demo3(java.lang.String,java.lang.String)[pri:0, instance:test.TestCase2@67c33749]" started-at="2021-07-21T15:31:57 CDT" name="Demo3" data-provider="getData" finished-at="2021-07-21T15:31:57 CDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo3 -->
        <test-method signature="Demo3(java.lang.String,java.lang.String)[pri:0, instance:test.TestCase2@67c33749]" started-at="2021-07-21T15:31:57 CDT" name="Demo3" data-provider="getData" finished-at="2021-07-21T15:31:57 CDT" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo3 -->
      </class> <!-- test.TestCase2 -->
    </test> <!-- personal loan -->
    <test started-at="2021-07-21T15:31:57 CDT" name="home loan" finished-at="2021-07-21T15:31:57 CDT" duration-ms="2">
      <class name="test.TestCase1">
        <test-method is-config="true" signature="lastone()[pri:0, instance:test.TestCase1@63a12c68]" started-at="2021-07-21T15:31:57 CDT" name="lastone" finished-at="2021-07-21T15:31:57 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastone -->
      </class> <!-- test.TestCase1 -->
      <class name="test.TestCase3">
        <test-method is-config="true" signature="thiswillrun()[pri:0, instance:test.TestCase3@e15b7e8]" started-at="2021-07-21T15:31:57 CDT" name="thiswillrun" finished-at="2021-07-21T15:31:57 CDT" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thiswillrun -->
        <test-method signature="Demo4(java.lang.String,java.lang.String)[pri:0, instance:test.TestCase3@e15b7e8]" started-at="2021-07-21T15:31:57 CDT" name="Demo4" finished-at="2021-07-21T15:31:57 CDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://mehak.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12343555]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo4 -->
      </class> <!-- test.TestCase3 -->
    </test> <!-- home loan -->
  </suite> <!-- Loan -->
</testng-results>
